[project]
name = "{{PROJECT_NAME}}"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Will Morris", email = "willmorris103@gmail.com" }
]
requires-python = ">=3.13"
dependencies = []


[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
    "uv_build",
]

[project.urls]
Homepage = "https://github.com/Willmo103/{{PROJECT_NAME}}"
Repository = "https://github.com/Willmo103/{{PROJECT_NAME}}"
Issues = "https://github.com/Willmo103/{{PROJECT_NAME}}/issues"

[build-system]
requires = ["uv_build>=0.8.0,<0.9"]
build-backend = "uv_build"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov={{PROJECT_NAME}}",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::ResourceWarning",
]

[tool.coverage.run]
source = ["{{PROJECT_NAME}}"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "dev-scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["{{PROJECT_NAME}}"]

[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
cache_dir = ".mypy_cache"

[[tool.mypy.overrides]]
module = [
    "sqlite_utils",
    "dotenv",
    "docling",
    "llm",
    "psycopg2",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 135
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".coverage",
    "*.egg-info",
    "build",
    "dist",
    ".venv",
    "dev-scripts*",
    "htmlcov",
    "*__init__.py",
]
output-file = "flake8_report.txt"
count = true
statistics = true

[dependency-groups]
dev = [
    "black",
    "flake8",
    "isort",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "watchfiles",
]
